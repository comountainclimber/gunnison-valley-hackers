{"version":3,"sources":["assets/week1/images/mock_up.jpg","assets/week1/images/citrine.png","assets/week1/images/screen-shot-1.png","logo.svg","components/FlippingCard.js","pages/Week1.js","pages/Home.js","components/Navigation.js","App.js","serviceWorker.js","index.js","assets/week1/images/ruby.png"],"names":["module","exports","class","src","ruby","id","href","target","ScreenShot","FlippingCard","MockUp","className","citrine","to","App","basename","Navigation","path","component","Week1","Home","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4HAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,4ECA3CD,EAAOC,QAAU,IAA0B,kC,0LCI5B,oBACb,yBAAKC,MAAM,kBACT,yBAAKA,MAAM,WACT,yBAAKA,MAAM,SACT,yBAAKC,IAAKC,OAEZ,yBAAKF,MAAM,QACT,yBAAKG,GAAG,kBACN,oCACA,yBAAKF,IAAKC,OAGZ,ojBCRO,oBACb,oCACE,wBAAIF,MAAM,eAAV,YAmCA,4BACE,0EACA,kNAG8C,IAC5C,uBAAGI,KAAK,iCAAiCC,OAAO,SAAhD,mCAIF,mGACuE,IACrE,4CAFF,mFAIE,yBAAKF,GAAG,cAAcF,IAAKK,QAG/B,4BACE,iDACA,kHAEW,yCAFX,wUAQA,6BACA,ujBAQiD,IAC/C,uBAAGF,KAAK,wCAAwCC,OAAO,SACpD,IADH,wCAEwC,MAG1C,6BACA,sCA1BF,kHA2BqD,IACnD,uBAAGD,KAAK,oCAAR,oCAGA,6BACA,6BACA,6BACE,0EADF,oOAMA,6BACA,kBAACG,EAAD,MACA,yBAAKJ,GAAG,UAAUF,IAAKO,MACvB,yBAAKC,UAAU,YAAYR,IAAKS,MAChC,yBAAKD,UAAU,YAAYR,IAAKC,SCtGvB,oBACb,wJAGE,mDACA,4BACE,yEACA,2EACA,8DACA,+FCTS,oBACb,yBAAKC,GAAG,cACL,IACD,kBAAC,IAAD,CAAMA,GAAG,YAAYQ,GAAG,KACtB,wGAA0C,KAE5C,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACS,+D,YCaEC,MAdf,WACE,OACE,yBAAKH,UAAU,OACb,kBAAC,IAAD,CAAQI,SAAS,4BACf,kBAACC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UAAUC,UAAW,kBAAM,kBAACC,EAAD,SACvC,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAW,kBAAM,kBAACE,EAAD,aCJvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBEzI5BvC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.7d6a0682.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mock_up.51e55b83.jpg\";","module.exports = __webpack_public_path__ + \"static/media/citrine.44a5f4c2.png\";","module.exports = __webpack_public_path__ + \"static/media/screen-shot-1.80190484.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n\nimport ruby from \"../assets/week1/images/ruby.png\";\n\nexport default () => (\n  <div class=\"flip-container\">\n    <div class=\"flipper\">\n      <div class=\"front\">\n        <img src={ruby} />\n      </div>\n      <div class=\"back\">\n        <div id=\"card-title-row\">\n          <h3>Ruby</h3>\n          <img src={ruby} />\n        </div>\n\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc egestas\n          orci placerat mauris tincidunt porttitor. Aenean ac nisl eget dui\n          volutpat fringilla vitae non metus. Suspendisse potenti. Nam facilisis\n          tortor odio, vel malesuada augue pretium sit amet. Phasellus vehicula,\n          sem non auctor elementum, libero nulla hendrerit mauris, quis lobortis\n          turpis justo nec ex. Nullam ut iaculis magna. Vestibulum a fermentum\n          tellus. Sed velit nisl, gravida quis porttitor nec, luctus eget ante.\n          In accumsan eros mattis accumsan posuere.\n        </p>\n      </div>\n    </div>\n  </div>\n);\n","import React from \"react\";\n\nimport MockUp from \"../assets/week1/images/mock_up.jpg\";\nimport citrine from \"../assets/week1/images/citrine.png\";\nimport ruby from \"../assets/week1/images/ruby.png\";\nimport ScreenShot from \"../assets/week1/images/screen-shot-1.png\";\nimport FlippingCard from \"../components/FlippingCard\";\n\nexport default () => (\n  <>\n    <h1 class=\"week-number\"> Week 1 </h1>\n    {/* <h3> Setting up your development environment: </h3> */}\n    {/* <ol>\n      <h4> The UNIX shell </h4>\n      <li>\n        First you need to become familiar with the very basics of operating a\n        unix shell. Its the basis for many things we will be doing. On your mac\n        use <code> cmnd + spacebar </code> and type in <code>terminal</code>.\n      </li>\n      <li>\n        Follow along with this resource{\" \"}\n        <a\n          href=\"https://www.tjhsst.edu/~dhyatt/superap/unixcmd.html\"\n          target=\"blank\"\n        >\n          https://www.tjhsst.edu/~dhyatt/superap/unixcmd.html{\" \"}\n        </a>{\" \"}\n        and become familiar with the basics of intercating with your computer\n        via the command line - specifcally creating files and navigating through\n        directories.\n      </li>\n      <li>\n        Create a directory called <code>projects</code> somewhere near the root\n        of your User directory. This is where you will keep all of your\n        projects.\n      </li>\n      <li>\n        Create a directory for your first assignment (which you will be posting\n        to github).\n      </li>\n      <li>\n        Within this directory create two files. index.html and styles.css{\" \"}\n        <code> touch index.html styles.css </code>\n      </li>\n    </ol> */}\n    <ol>\n      <h4> Setting up your development environment: </h4>\n      <li>\n        To write code you will need what is known as a text editor. I highly\n        reccomend using VSCode and its what I will be using throughout the\n        course however feel free to use any editor.{\" \"}\n        <a href=\"https://code.visualstudio.com/\" target=\"blank\">\n          https://code.visualstudio.com/\n        </a>\n      </li>\n      <li>\n        Open a new window in VSCode. Go to File -> Save As and name the file{\" \"}\n        <code>index.html</code> be sure to save the file in a directory that you\n        can remember and easiy access:\n        <img id=\"screen-shot\" src={ScreenShot} />\n      </li>\n    </ol>\n    <ul>\n      <h4> The assignment: </h4>\n      <div>\n        As a professional developer you are frequently asked to develop what are\n        known as <b>components</b>. Think about the layout of apps like Facebook\n        and Instagram and you will quickly realize that the entire User\n        Interface is comprised of small modular pieces. This week we will be\n        building our very first component. A card that displays information\n        about various precious gems üíéüíéüíéüíé\n      </div>\n      <br />\n      <div>\n        Using HTML and CSS alone (links to the gem image files are included\n        below simply right click and save image) you are going to reproduce this\n        mock up. Its important to note that as developers there are many tools\n        we can use to speed up our work flow. One amazing tool that you are\n        going to want to use during this assignment (and future projects) are\n        Chrome dev tools. To open right click in chrome and click \"Inspect\".\n        Shifiting over to the elements page will allow you to edit the css of\n        any website in real time (including this one).{\" \"}\n        <a href=\"https://developer.chrome.com/devtools\" target=\"blank\">\n          {\" \"}\n          https://developer.chrome.com/devtools{\" \"}\n        </a>\n      </div>\n      <br />\n      <b> BONUS:</b> have the card flip like in the example below. A great write\n      up of how to achieve this effect can be found here{\" \"}\n      <a href=\"https://davidwalsh.name/css-flip\">\n        https://davidwalsh.name/css-flip\n      </a>\n      <br />\n      <br />\n      <div>\n        <b>NOTE: This is meant to be very challenging!</b> It doesnt need to be\n        absolutely perfect... If you are getting blocked or stuck post a message\n        in the FB group or reach out and send me an email. Do the best you can\n        and we will review the assignment during our next meeting.\n      </div>\n      <br />\n      <FlippingCard />\n      <img id=\"mock-up\" src={MockUp} />\n      <img className=\"gem-asset\" src={citrine} />\n      <img className=\"gem-asset\" src={ruby} />\n      {/* <li>\n        {\" \"}\n        The resources for these icons can be found in <code>\n          {\" \"}\n          /images{\" \"}\n        </code>{\" \"}\n      </li>\n      <li>\n        {\" \"}\n        <a href=\"https://hipsum.co/\"> https://hipsum.co/ </a> is a great\n        resource for placeholder content{\" \"}\n      </li>\n      <li>\n        {\" \"}\n        Ultimately the goal is to have these cards flip in place (something\n        similar to this){\" \"}\n        <a href=\"https://davidwalsh.name/demo/css-flip.php\" target=\"blank\">\n          https://davidwalsh.name/demo/css-flip.php\n        </a>{\" \"}\n        They can be stacked in a column or a row however you prefer.\n      </li>\n      <div>\n        When you are finished you will create a github repo and upload your\n        project. This will be the start of your awesome portfolio.\n      </div> */}\n    </ul>\n  </>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <div>\n    This is a website created by Maxwell Lasky in order to teach the\n    fundamentals of web development to the Gunnison Valley.\n    <h4>What we will cover:</h4>\n    <ul>\n      <li>fundamentals of HTML5, CSS and javascript</li>\n      <li>simple javascript data structures and logic</li>\n      <li>source control, git and github</li>\n      <li>building your porfolio deploying your projects/code for free</li>\n    </ul>\n  </div>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n  <div id=\"navigation\">\n    {\" \"}\n    <Link id=\"home-link\" to=\"/\">\n      <h1> ‚õ∞Ô∏è‚õ∞Ô∏èGunnison Valley Hackers‚õ∞Ô∏è‚õ∞Ô∏è</h1>{\" \"}\n    </Link>\n    <Link to=\"/week-1\">\n      Week 1 <small>(03/23/2020 - 03/29/2020)</small>\n    </Link>\n  </div>\n);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Week1 from \"./pages/Week1\";\nimport Home from \"./pages/Home\";\nimport Navigation from \"./components/Navigation\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename=\"/gunnison-valley-hackers\">\n        <Navigation />\n        <Switch>\n          <Route path=\"/week-1\" component={() => <Week1 />} />\n          <Route path=\"/\" component={() => <Home />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ruby.f985ca64.png\";"],"sourceRoot":""}